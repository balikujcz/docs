openapi: 3.0.1
info:
  title: Balikuj.cz API
  description: API rozhraní pro správu a zasílání balíku na Balíkuj
  termsOfService: https://balikuj.cz/terms
  contact:
    name: Balíkuj Support
    url: https://www.balikuj.cz/help
    email: pomoc@balikuj.cz
  version: v1
paths:
  /api/Account/Info:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInfoUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountInfoUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountInfoUpdateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/Login:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLoginModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountLoginModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountLoginModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/EmailValid:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterEmailValidModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterEmailValidModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountRegisterEmailValidModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/Register:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountRegisterModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountRegisterModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/Activate:
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountActivateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountActivateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountActivateModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/Logout:
    post:
      tags:
        - Account
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/ChangeEmail:
    put:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangeEmailModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/ChangePassword:
    put:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ChangePasswordModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/Cancel:
    post:
      tags:
        - Account
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/TwoFactorAuth:
    post:
      tags:
        - Account
      summary: Enable two factor authentication with Google Authenticator
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Account
      summary: Activate two way authentication with Google Authenticator using supplied code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountTwoFactorActivateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountTwoFactorActivateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountTwoFactorActivateModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Account
      summary: Disable two way authentication with Google Authenticator
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/Avatar:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
    post:
      tags:
        - Account
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Account
      responses:
        '200':
          description: Success
  /api/Account/Timezones:
    get:
      tags:
        - Account
      summary: Vrátí seznam podporovaných časových zón pro využití v systému Balíkuj
      responses:
        '200':
          description: Success
  /api/Account/ActiveSessions:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Account/ApiKeys:
    get:
      tags:
        - Account
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountApiKeyCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountApiKeyCreateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountApiKeyCreateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountApiKeyDeleteModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AccountApiKeyDeleteModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AccountApiKeyDeleteModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Address/Find:
    post:
      tags:
        - Address
      summary: Vrátí seznam adress dle zadaných kritérií
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AddressListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/AddressListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/AddressListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Address:
    post:
      tags:
        - Address
      summary: Vytvoří adresu dle zadaného modelu
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          text/json:
            schema:
              $ref: '#/components/schemas/AddressModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AddressModel'
      responses:
        '200':
          description: Success
  '/api/Address/{id}':
    get:
      tags:
        - Address
      summary: Vyhledá adresu dle zadaného ID a vrátí ji jako výsledek
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Address
      summary: 'Smaže adresu dle zadaného ID. Pokud je adresa použita někde jinde, bude pouze označena jako neaktivní'
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Application/Find:
    post:
      tags:
        - Application
      summary: Vrátí seznam aplikací dle zadaných kritérií
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApplicationListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Application/Types:
    get:
      tags:
        - Application
      summary: 'Vrátí seznam aplikací, které jsou k dispozici pro aktivaci'
      responses:
        '200':
          description: Success
  '/api/Application/{id}':
    get:
      tags:
        - Application
      summary: Vrátí informace o nainstalované aplikaci
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Application
      summary: Aktualizuje nastavení aplikace dle zadaných dat
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Application
      summary: 'Nastaví zvolenou aplikaci jako smazanou. K fyzickému odstranění dat objednávek, stavů, platebních metod a dalšího dojde automaticky za 30 dnů nebo požádání ihned.'
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Application:
    post:
      tags:
        - Application
      summary: Vytvoří novou aplikaci dle zvoleného typu aplikace
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationActivateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationActivateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationActivateModel'
      responses:
        '200':
          description: Success
  '/api/Application/{applicationId}/CarrierMappings':
    get:
      tags:
        - Application
      summary: 'Vrátí seznam namapovaných dopravců, které máte v systému Balíkuj vytvořeny'
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Application
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCarrierModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationCarrierModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationCarrierModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Application/{applicationId}/CarrierMappings/{id}':
    get:
      tags:
        - Application
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Application
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCarrierModel'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationCarrierModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApplicationCarrierModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Application
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /ManipulationUnits:
    get:
      tags:
        - BaseCarrier
      summary: Vrátí seznam podporovaných manipulačních jednotek
      responses:
        '200':
          description: Success
  /Services:
    get:
      tags:
        - BaseCarrier
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /ServiceCountries:
    get:
      tags:
        - BaseCarrier
      summary: 'Vrátí pro každou službu seznam zemí v ISO-2 formátu, kam dopravce doručuje'
      parameters:
        - name: serviceType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /ServiceAddons:
    get:
      tags:
        - BaseCarrier
      summary: 'Vrací seznam doplňkových služeb podle daného dopravce. Pokud dopravce umožňuje při přidání zásilky specifikovat doplňkové služby, můžete použít hodnoty code z této metody.'
      parameters:
        - name: serviceCode
          in: query
          description: Je možné zadat kód služby pro vyfiltrování doplňkových služeb pro danou službu
          schema:
            type: string
      responses:
        '200':
          description: Success
  /Branches:
    post:
      tags:
        - BaseCarrier
      summary: 'Vrátí seznam poboček, dle zadaných parametrů'
      parameters:
        - name: BranchType
          in: query
          description: 'Typ výdejního místa, Branch = Pobočka, Box = Výdejní box'
          schema:
            $ref: '#/components/schemas/CarrierBranchType'
        - name: Country
          in: query
          description: ISO kód země (2 znaky) pro filtrování seznamu pobožek
          schema:
            type: string
        - name: Name
          in: query
          description: 'Jedno klíčové slovo bez mezery pro vyhledávání v názvu, městu nebo ulici'
          schema:
            type: string
        - name: Page
          in: query
          description: Gets a page number
          schema:
            type: integer
            format: int32
        - name: PageSize
          in: query
          description: Gets a page size
          schema:
            type: integer
            format: int32
        - name: Draw
          in: query
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          schema:
            type: integer
            format: int32
        - name: Start
          in: query
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          schema:
            type: integer
            format: int32
        - name: Length
          in: query
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          schema:
            type: integer
            format: int32
            default: 50
        - name: CustomProperties
          in: query
          description: Gets or sets property to store any custom values for models
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
        '400':
          description: Bad Request
  /Tracking:
    post:
      tags:
        - BaseCarrier
      summary: Vyhledá stav zvolených zásilek
      parameters:
        - name: Packages
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
        '400':
          description: Bad Request
  /api/Carrier:
    get:
      tags:
        - Carrier
      summary: 'Vrátí seznam dopravců a informace o tom, zda jsou aktivní'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Carrier/Find:
    post:
      tags:
        - Carrier
      summary: 'Vrátí seznam dopravců a informace o tom, zda jsou aktivní'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Carrier/Services:
    post:
      tags:
        - Carrier
      summary: Vrátí seznam podporovaných služeb daného dopravce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierServiceSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CarrierServiceSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CarrierServiceSearchModel'
      responses:
        '200':
          description: Success
  /api/Carrier/ManipulationUnits:
    post:
      tags:
        - Carrier
      summary: Vrátí seznam manipulačních jednotek u daného dopravce
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarrierManipulationUnitSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CarrierManipulationUnitSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CarrierManipulationUnitSearchModel'
      responses:
        '200':
          description: Success
  /api/Cp/Create:
    post:
      tags:
        - Cp
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageCpModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageCpModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageCpModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Cp/{id}':
    get:
      tags:
        - Cp
      summary: Vrátí informace o balíku se zvoleným ID. ID je číselný identifikátor zásilky v našem systému
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Cp/Order:
    post:
      tags:
        - Cp
      summary: 'Odešle do systému daného dopravce všechny zvolené zásilky nebo pokud nejsou zadány žádné zásilky, tak odešle všechny nezpracované.'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Cp/Cancel:
    post:
      tags:
        - Cp
      summary: Zruší zvolené zásilky
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Cp/ManipulationUnits:
    get:
      tags:
        - Cp
      summary: Vrátí seznam podporovaných manipulačních jednotek
      responses:
        '200':
          description: Success
  /api/Cp/Services:
    get:
      tags:
        - Cp
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /api/Cp/ServiceCountries:
    get:
      tags:
        - Cp
      summary: 'Vrátí pro každou službu seznam zemí v ISO-2 formátu, kam dopravce doručuje'
      parameters:
        - name: serviceType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Cp/ServiceAddons:
    get:
      tags:
        - Cp
      summary: 'Vrací seznam doplňkových služeb podle daného dopravce. Pokud dopravce umožňuje při přidání zásilky specifikovat doplňkové služby, můžete použít hodnoty code z této metody.'
      parameters:
        - name: serviceCode
          in: query
          description: Je možné zadat kód služby pro vyfiltrování doplňkových služeb pro danou službu
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Cp/Branches:
    post:
      tags:
        - Cp
      summary: 'Vrátí seznam poboček, dle zadaných parametrů'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Cp/Tracking:
    post:
      tags:
        - Cp
      summary: Vyhledá stav zvolených zásilek
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Dpd/Create:
    post:
      tags:
        - Dpd
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageDpdModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageDpdModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageDpdModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Dpd/{id}':
    get:
      tags:
        - Dpd
      summary: Vrátí informace o balíku se zvoleným ID. ID je číselný identifikátor zásilky v našem systému
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Dpd/Order:
    post:
      tags:
        - Dpd
      summary: 'Odešle do systému daného dopravce všechny zvolené zásilky nebo pokud nejsou zadány žádné zásilky, tak odešle všechny nezpracované.'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Dpd/Cancel:
    post:
      tags:
        - Dpd
      summary: Zruší zvolené zásilky
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Dpd/ManipulationUnits:
    get:
      tags:
        - Dpd
      summary: Vrátí seznam podporovaných manipulačních jednotek
      responses:
        '200':
          description: Success
  /api/Dpd/Services:
    get:
      tags:
        - Dpd
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /api/Dpd/ServiceCountries:
    get:
      tags:
        - Dpd
      summary: 'Vrátí pro každou službu seznam zemí v ISO-2 formátu, kam dopravce doručuje'
      parameters:
        - name: serviceType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Dpd/ServiceAddons:
    get:
      tags:
        - Dpd
      summary: 'Vrací seznam doplňkových služeb podle daného dopravce. Pokud dopravce umožňuje při přidání zásilky specifikovat doplňkové služby, můžete použít hodnoty code z této metody.'
      parameters:
        - name: serviceCode
          in: query
          description: Je možné zadat kód služby pro vyfiltrování doplňkových služeb pro danou službu
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Dpd/Branches:
    post:
      tags:
        - Dpd
      summary: 'Vrátí seznam poboček, dle zadaných parametrů'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Dpd/Tracking:
    post:
      tags:
        - Dpd
      summary: Vyhledá stav zvolených zásilek
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/EmailAccount/Find:
    post:
      tags:
        - EmailAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmailAccountSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmailAccountSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmailAccountListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAccountListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/EmailAccountListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/EmailAccount/MarkAsDefaultEmail:
    post:
      tags:
        - EmailAccount
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/EmailAccount:
    post:
      tags:
        - EmailAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmailAccountModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmailAccountModel'
      responses:
        '200':
          description: Success
    put:
      tags:
        - EmailAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmailAccountModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmailAccountModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - EmailAccount
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/EmailAccount/SendTestEmail:
    post:
      tags:
        - EmailAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailAccountTestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/EmailAccountTestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmailAccountTestModel'
      responses:
        '200':
          description: Success
  /api/EmailTemplate/Find:
    post:
      tags:
        - EmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageTemplateSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/MessageTemplateListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/MessageTemplateListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/EmailTemplate:
    put:
      tags:
        - EmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
      responses:
        '200':
          description: Success
    post:
      tags:
        - EmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - EmailTemplate
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/EmailTemplate/CopyTemplate:
    post:
      tags:
        - EmailTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/MessageTemplateModel'
      responses:
        '200':
          description: Success
  /api/EmailTemplate/TestTemplate:
    get:
      tags:
        - EmailTemplate
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
        - name: languageId
          in: query
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
    post:
      tags:
        - EmailTemplate
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TestMessageTemplateModel'
      responses:
        '200':
          description: Success
  '/api/EmailTemplate/UploadAttachment/{id}':
    post:
      tags:
        - EmailTemplate
      summary: Pomocí této metody můžeme nahrát přílohu ve formátu .pdf k emailové šabloně. V tuto chvíli je možné přiložit k šabloně pouze jeden soubor.
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Geis/Create:
    post:
      tags:
        - Geis
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageGeisModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageGeisModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageGeisModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Geis/{id}':
    get:
      tags:
        - Geis
      summary: Vrátí informace o balíku se zvoleným ID. ID je číselný identifikátor zásilky v našem systému
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Geis/Order:
    post:
      tags:
        - Geis
      summary: 'Odešle do systému daného dopravce všechny zvolené zásilky nebo pokud nejsou zadány žádné zásilky, tak odešle všechny nezpracované.'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Geis/Cancel:
    post:
      tags:
        - Geis
      summary: Zruší zvolené zásilky
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Geis/ManipulationUnits:
    get:
      tags:
        - Geis
      summary: Vrátí seznam podporovaných manipulačních jednotek
      responses:
        '200':
          description: Success
  /api/Geis/Services:
    get:
      tags:
        - Geis
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /api/Geis/ServiceCountries:
    get:
      tags:
        - Geis
      summary: 'Vrátí pro každou službu seznam zemí v ISO-2 formátu, kam dopravce doručuje'
      parameters:
        - name: serviceType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Geis/ServiceAddons:
    get:
      tags:
        - Geis
      summary: 'Vrací seznam doplňkových služeb podle daného dopravce. Pokud dopravce umožňuje při přidání zásilky specifikovat doplňkové služby, můžete použít hodnoty code z této metody.'
      parameters:
        - name: serviceCode
          in: query
          description: Je možné zadat kód služby pro vyfiltrování doplňkových služeb pro danou službu
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Geis/Branches:
    post:
      tags:
        - Geis
      summary: 'Vrátí seznam poboček, dle zadaných parametrů'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Geis/Tracking:
    post:
      tags:
        - Geis
      summary: Vyhledá stav zvolených zásilek
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Label/NotPrinted:
    post:
      tags:
        - Label
      summary: Vygeneruje odkaz na štítky pro všechny nevytisknuté zásilky
      parameters:
        - name: type
          in: query
          description: ''
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Label/Print:
    post:
      tags:
        - Label
      summary: Vygeneruje odkaz na štítky pro zásilky dle zadaných ID zásilek
      parameters:
        - name: type
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelPackageModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LabelPackageModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LabelPackageModel'
      responses:
        '200':
          description: Success
  /api/Label/PrintOrders:
    post:
      tags:
        - Label
      summary: Vygeneruje odkaz na štítky pro zásilky dle zadaných ID objednávek
      parameters:
        - name: type
          in: query
          description: ''
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/LabelOrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LabelOrderModel'
      responses:
        '200':
          description: Success
  /api/Order/Find:
    post:
      tags:
        - Order
      summary: Vrátí seznam objednávek dle zadaných kritérií
      parameters:
        - name: includeItems
          in: query
          description: 'Volba, zda přidat do přehledu objednávek i položky objednávek'
          schema:
            type: boolean
            default: false
        - name: includeJson
          in: query
          description: 'Volba, zda přidat do přehledu objednávek i zdrojová JSON data, pokud jsou k dispozici'
          schema:
            type: boolean
            default: false
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrderListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/OrderListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Order/{id}':
    get:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: includeJson
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
  /api/Order:
    put:
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderUpdateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Order/Pdf:
    post:
      tags:
        - Order
      summary: Vrátí binární PDF detailu objednávky
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPrintPdfModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderPrintPdfModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderPrintPdfModel'
      responses:
        '200':
          description: Success
  /api/Order/Status:
    post:
      tags:
        - Order
      summary: Změní pro všechny zadané ID objednávek stavy na zvolené ID
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangeModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangeModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusChangeModel'
      responses:
        '200':
          description: Success
  /api/Order/CreatePackages:
    post:
      tags:
        - Order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreatePackagesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderCreatePackagesRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderCreatePackagesRequest'
      responses:
        '200':
          description: Success
  '/api/Order/{id}/Item':
    put:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItemUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderItemUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderItemUpdateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Order/Statuses:
    get:
      tags:
        - Order
      summary: 'Vrátí seznam stavových kódů objednávek, které máte v systému vytvořeny včetně systémových stavů, které jsou vráceny vždy první'
      parameters:
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Order
      parameters:
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusCreateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusCreateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Order/Statuses/{id}':
    get:
      tags:
        - Order
      summary: Vrátí detaily stavového kódu dle zvoleného ID
      description: remarks
      parameters:
        - name: id
          in: path
          description: ID stavového kódu
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: query
          description: 'ID aplikace, ke které se stavový kód vztahuje'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Order
      summary: Upraví zvolený stavový kód dle ID stavového kódu pro danou aplikaci
      parameters:
        - name: id
          in: path
          description: ID stavového kódu
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: query
          description: 'ID aplikace, ke které se stavový kód vztahuje'
          schema:
            type: integer
            format: int32
      requestBody:
        description: 'Stavový kód, který chceme upravit'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Order/PaymentMethods:
    get:
      tags:
        - Order
      summary: 'Vrátí seznam stavových kódů objednávek, které máte v systému vytvořeny včetně systémových stavů, které jsou vráceny vždy první'
      parameters:
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
        - Order
      parameters:
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentCreateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderPaymentCreateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Order/PaymentMethods/{id}':
    get:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/OrderPaymentUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrderPaymentUpdateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
        - Order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Package/Find:
    post:
      tags:
        - Package
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PackageListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/PackageListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/PackageListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Package/NotOrderedInfo:
    post:
      tags:
        - Package
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /api/Package/Activity:
    post:
      tags:
        - Package
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageActivitySearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageActivitySearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageActivitySearchModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/pdf/label:
    post:
      tags:
        - Pdf
      summary: Vytiskne štítky pro dané zásilky
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackagePdfPrintModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackagePdfPrintModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackagePdfPrintModel'
      responses:
        '200':
          description: Success
  '/api/pdf/label/{hash}':
    get:
      tags:
        - Pdf
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: OnePerPage
          in: query
          schema:
            type: boolean
        - name: Type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/pdf/pl/{hash}':
    get:
      tags:
        - Pdf
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
        - name: Skip
          in: query
          schema:
            type: integer
            format: int32
        - name: OnePerPage
          in: query
          schema:
            type: boolean
        - name: Type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/pdf/protocol/{hash}':
    get:
      tags:
        - Pdf
      summary: Vytiskne předávací protokol dle zadaného hash
      parameters:
        - name: hash
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  '/api/pdf/protocol/{id}':
    get:
      tags:
        - Pdf
      summary: Vytiskne předávací protokol dle zadaného id protokolu
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/pdf/order/{hash}':
    get:
      tags:
        - Pdf
      parameters:
        - name: hash
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Pickup/Find:
    post:
      tags:
        - Pickup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PickupSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickupSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PickupListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/PickupListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/PickupListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Ppl/Create:
    post:
      tags:
        - Ppl
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackagePplModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackagePplModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackagePplModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Ppl/{id}':
    get:
      tags:
        - Ppl
      summary: Vrátí informace o balíku se zvoleným ID. ID je číselný identifikátor zásilky v našem systému
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Ppl/Order:
    post:
      tags:
        - Ppl
      summary: 'Odešle do systému daného dopravce všechny zvolené zásilky nebo pokud nejsou zadány žádné zásilky, tak odešle všechny nezpracované.'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Ppl/Cancel:
    post:
      tags:
        - Ppl
      summary: Zruší zvolené zásilky
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Ppl/Info:
    get:
      tags:
        - Ppl
      summary: 'Vrací seznam všech URL adres daného dopravce, se kterými lze v systému pracovat.'
      responses:
        '200':
          description: Success
  /api/Ppl/ManipulationUnits:
    get:
      tags:
        - Ppl
      summary: Vrátí seznam podporovaných manipulačních jednotek
      responses:
        '200':
          description: Success
  /api/Ppl/Services:
    get:
      tags:
        - Ppl
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /api/Ppl/ServiceCountries:
    get:
      tags:
        - Ppl
      summary: 'Vrátí pro každou službu seznam zemí v ISO-2 formátu, kam dopravce doručuje'
      parameters:
        - name: serviceType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Ppl/ServiceAddons:
    get:
      tags:
        - Ppl
      summary: 'Vrací seznam doplňkových služeb podle daného dopravce. Pokud dopravce umožňuje při přidání zásilky specifikovat doplňkové služby, můžete použít hodnoty code z této metody.'
      parameters:
        - name: serviceCode
          in: query
          description: Je možné zadat kód služby pro vyfiltrování doplňkových služeb pro danou službu
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Ppl/Branches:
    post:
      tags:
        - Ppl
      summary: 'Vrátí seznam poboček, dle zadaných parametrů'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Ppl/Tracking:
    post:
      tags:
        - Ppl
      summary: Vyhledá stav zvolených zásilek
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Rule/Find:
    post:
      tags:
        - Rule
      summary: Vrátí seznam aplikací dle zadaných kritérií
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RuleSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RuleSearchModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RuleListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/RuleListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/RuleListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Rule/Fields:
    get:
      tags:
        - Rule
      summary: Vrátí seznam aplikací dle zadaných kritérií
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Rule/{id}':
    get:
      tags:
        - Rule
      summary: Vrátí informace o nainstalované aplikaci
      parameters:
        - name: id
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Rule
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RuleUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RuleUpdateModel'
      responses:
        '200':
          description: Success
  /api/Rule:
    post:
      tags:
        - Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/RuleCreateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RuleCreateModel'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Rule
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Search/Find:
    post:
      tags:
        - Search
      summary: Vrátí seznam adress dle zadaných kritérií
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchKeywordModel'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchKeywordModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SearchKeywordModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResultListModel'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResultListModel'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResultListModel'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Search/Recent:
    get:
      tags:
        - Search
      summary: Vrátí seznam deseti posledních hledáných frází
      responses:
        '200':
          description: Success
  /api/Scheduled/ProcessPackageTracking:
    get:
      tags:
        - Scheduled
      responses:
        '200':
          description: Success
  /api/Scheduled/ProcessWedoBranchUpdate:
    get:
      tags:
        - Scheduled
      responses:
        '200':
          description: Success
  /api/Scheduled/ProcessPplBranchUpdate:
    get:
      tags:
        - Scheduled
      summary: "PPL INFO:\r\nPOZOR! K aktualizaci dochází denně! A je možné doručovat i do vybraných zahraničních Parcelshopů. Aktualizace doporučujeme kolem 4–5 hodiny ranní!"
      responses:
        '200':
          description: Success
  /api/Stats/PackageInfo:
    get:
      tags:
        - Stats
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /api/Stats/PackageTotal:
    post:
      tags:
        - Stats
      summary: Vrátí statistiky počtu balíků za zvolené období
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTotalSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageTotalSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageTotalSearchModel'
      responses:
        '200':
          description: Success
  /api/Stats/PackageCarrier:
    post:
      tags:
        - Stats
      responses:
        '200':
          description: Success
  /WeatherForecast:
    get:
      tags:
        - WeatherForecast
      operationId: GetWeatherForecast
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
  /WeatherForecast/Test:
    get:
      tags:
        - WeatherForecast
      responses:
        '200':
          description: Success
  /WeatherForecast/SetGeisSettings:
    get:
      tags:
        - WeatherForecast
      responses:
        '200':
          description: Success
  /WeatherForecast/TestWebhook:
    get:
      tags:
        - WeatherForecast
      responses:
        '200':
          description: Success
  /WeatherForecast/TestWedoTracking:
    get:
      tags:
        - WeatherForecast
      responses:
        '200':
          description: Success
  /WeatherForecast/UpgatesTestService:
    get:
      tags:
        - WeatherForecast
      responses:
        '200':
          description: Success
  /WeatherForecast/ZahradaVpohodeTestService:
    get:
      tags:
        - WeatherForecast
      responses:
        '200':
          description: Success
  /api/Webhook:
    get:
      tags:
        - Webhook
      responses:
        '200':
          description: Success
    post:
      tags:
        - Webhook
      summary: Vytvoří nový webhook podle zadaných hodnot
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/WebhookCreateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebhookCreateModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WebhookCreateResponseModelApiGenericResult'
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookCreateResponseModelApiGenericResult'
            text/json:
              schema:
                $ref: '#/components/schemas/WebhookCreateResponseModelApiGenericResult'
    put:
      tags:
        - Webhook
      summary: Upraví Webhook s daným ID
      requestBody:
        description: Parametry upravovaného Webhook
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateModel'
          text/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebhookUpdateModel'
      responses:
        '200':
          description: Success
  '/api/Webhook/{id}':
    get:
      tags:
        - Webhook
      summary: Vrátí informace o Webhook s daným ID
      parameters:
        - name: id
          in: path
          description: ID zvoleného Webhook
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Webhook
      summary: Smaže Webhook s daným ID
      parameters:
        - name: id
          in: path
          description: ID Webhooku pro smazání
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Wedo/Create:
    post:
      tags:
        - Wedo
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageWedoModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageWedoModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/AddPackageWedoModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/api/Wedo/{id}':
    get:
      tags:
        - Wedo
      summary: Vrátí informace o balíku se zvoleným ID. ID je číselný identifikátor zásilky v našem systému
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/Wedo/Order:
    post:
      tags:
        - Wedo
      summary: 'Odešle do systému daného dopravce všechny zvolené zásilky nebo pokud nejsou zadány žádné zásilky, tak odešle všechny nezpracované.'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PickupOrderModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Wedo/Cancel:
    post:
      tags:
        - Wedo
      summary: Zruší zvolené zásilky
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageCancelModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Wedo/ManipulationUnits:
    get:
      tags:
        - Wedo
      summary: Vrátí seznam podporovaných manipulačních jednotek
      responses:
        '200':
          description: Success
  /api/Wedo/Services:
    get:
      tags:
        - Wedo
      summary: Vrátí seznam podporovaných služeb daného dopravce
      responses:
        '200':
          description: Success
  /api/Wedo/ServiceCountries:
    get:
      tags:
        - Wedo
      summary: 'Vrátí pro každou službu seznam zemí v ISO-2 formátu, kam dopravce doručuje'
      parameters:
        - name: serviceType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Wedo/ServiceAddons:
    get:
      tags:
        - Wedo
      summary: 'Vrací seznam doplňkových služeb podle daného dopravce. Pokud dopravce umožňuje při přidání zásilky specifikovat doplňkové služby, můžete použít hodnoty code z této metody.'
      parameters:
        - name: serviceCode
          in: query
          description: Je možné zadat kód služby pro vyfiltrování doplňkových služeb pro danou službu
          schema:
            type: string
      responses:
        '200':
          description: Success
  /api/Wedo/Branches:
    post:
      tags:
        - Wedo
      summary: 'Vrátí seznam poboček, dle zadaných parametrů'
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          text/json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BranchSearchModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Wedo/Tracking:
    post:
      tags:
        - Wedo
      summary: Vyhledá stav zvolených zásilek
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PackageTrackingStatusRequestModel'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    AccountActivateModel:
      type: object
      properties:
        guid:
          type: string
          nullable: true
        hash:
          type: string
          nullable: true
      additionalProperties: false
    AccountApiKeyCreateModel:
      type: object
      properties:
        name:
          type: string
          nullable: true
      additionalProperties: false
    AccountApiKeyDeleteModel:
      type: object
      properties:
        key:
          type: string
          nullable: true
      additionalProperties: false
    AccountInfoUpdateModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        fullName:
          type: string
          nullable: true
        company:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        timeZone:
          type: string
          nullable: true
        settings:
          $ref: '#/components/schemas/AccountSettings'
      additionalProperties: false
    AccountLoginModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        language:
          type: string
          nullable: true
        code:
          type: string
          description: Optional ode for two way authentication from Google Authenticator
          nullable: true
      additionalProperties: false
    AccountRegisterEmailValidModel:
      type: object
      properties:
        email:
          type: string
          nullable: true
      additionalProperties: false
    AccountRegisterModel:
      type: object
      properties:
        fullName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    AccountSettings:
      type: object
      properties:
        layoutWidth:
          $ref: '#/components/schemas/LayoutWidthEnum'
        packageLayout:
          $ref: '#/components/schemas/LayoutTypeEnum'
        packageListSize:
          type: integer
          format: int32
          nullable: true
        orderLayout:
          $ref: '#/components/schemas/LayoutTypeEnum'
        orderListSize:
          type: integer
          format: int32
          nullable: true
        orderShowItems:
          type: boolean
          nullable: true
      additionalProperties: false
    AccountTwoFactorActivateModel:
      required:
        - code
      type: object
      properties:
        code:
          maxLength: 6
          minLength: 0
          type: string
      additionalProperties: false
    AddPackageCpModel:
      type: object
      properties:
        orderId:
          type: integer
          description: 'ID objednávky, ke které daná zásilka patří'
          format: int32
          nullable: true
        serviceType:
          type: string
          description: 'Kód služby dopravce, která se použije pro danou zásilku'
          nullable: true
        recName:
          type: string
          description: Jméno a příjmení příjemce
          nullable: true
        recCompany:
          type: string
          description: Název firmy příjemce
          nullable: true
        recStreet:
          type: string
          description: Název ulice příjemce
          nullable: true
        recCity:
          type: string
          description: Název města příjemce
          nullable: true
        recZip:
          type: string
          description: PSČ příjemce
          nullable: true
        recCountry:
          type: string
          description: Kód země příjemce ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        recPhone:
          type: string
          description: Telefon příjemce i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        recEmail:
          type: string
          description: Email příjemce
          nullable: true
        coverEnabled:
          type: boolean
          description: Byla zadána krycí adresa?
          nullable: true
        coverName:
          type: string
          description: Jméno a příjmení krycí adresy
          nullable: true
        coverCompany:
          type: string
          description: Název firmy krycí adresy
          nullable: true
        coverStreet:
          type: string
          description: Název ulice krycí adresy
          nullable: true
        coverCity:
          type: string
          description: Název města krycí adresy
          nullable: true
        coverZip:
          type: string
          description: PSČ krycí adresy
          nullable: true
        coverCountry:
          type: string
          description: Kód země krycí adresy ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        coverPhone:
          type: string
          description: Telefon krycí adresy i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        coverEmail:
          type: string
          description: Email krycí adresy
          nullable: true
        senderEnabled:
          type: boolean
          description: Byla zadána adresa odesílatele?
          nullable: true
        senderName:
          type: string
          description: Jméno a příjmení adresy odesílatele
          nullable: true
        senderCompany:
          type: string
          description: Název firmy adresy odesílatele
          nullable: true
        senderStreet:
          type: string
          description: Název ulice adresy odesílatele
          nullable: true
        senderCity:
          type: string
          description: Název města adresy odesílatele
          nullable: true
        senderZip:
          type: string
          description: PSČ adresy odesílatele
          nullable: true
        senderCountry:
          type: string
          description: Kód země adresy odesílatele ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        senderPhone:
          type: string
          description: Telefon adresy odesílatele i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        senderEmail:
          type: string
          description: Email adresy odesílatele
          nullable: true
        reference:
          type: string
          description: Referenční číslo/ID zásilky
          nullable: true
        piecesCount:
          type: integer
          description: Počet balíků v zásilce
          format: int32
        weight:
          type: number
          description: Celková váha zásilky v kg
          format: double
        width:
          type: number
          description: Šířka balíku v cm. Povinné pouze pro službu BN (Balíkovna)
          format: double
          nullable: true
        length:
          type: number
          description: Délka balíku v cm. Povinné pouze pro službu BN (Balíkovna)
          format: double
          nullable: true
        height:
          type: number
          description: Výška balíku v cm. Povinné pouze pro službu BN (Balíkovna)
          format: double
          nullable: true
        note:
          type: string
          description: Vlastní poznámka při vložení balíku do databáze
          nullable: true
        price:
          type: number
          description: Udávaná hodnota zásilky
          format: double
        branchId:
          type: string
          description: 'ID výdejního místa. Seznam výdejních míst je možné získat přes metodu {{dopravce}}/Branches'
          nullable: true
        codPrice:
          type: number
          description: Hodnota dobírky. Nastavuje se celková hodnota pro celou zásilku a pouze u první položky
          format: double
          nullable: true
        reverseOrder:
          type: boolean
          description: Požadavek na službu "zpětná zásilka". Zasílatel zajistí vyzvednutí Zásilky kdekoliv na území vybraných zemí EU a zajistí její přepravu zpět na svozové místo Příkazce.
          nullable: true
        directOrder:
          type: boolean
          description: Požadavek na službu "přímá zásilka". Zasílatel zajistí převzetí Zásilky na adrese mimo pravidelné svozové místo (například přímo u dodavatele) a její Vydání Příjemci.Tato doplňková služba je poskytována pouze na území České republiky a Slovenské republiky.
          nullable: true
        exchangeOrder:
          type: boolean
          description: "Požadavek na službu \"výměnná zásilka\". Současně při doručení Zásilky Příjemci Zasílatel zajistí vyzvednutí druhé zásilky od Příjemce a doručí ji Příkazci. Bez vyzvednutí zásilky adresované Příkazci nebude Příjemci Zásilka předána \r\n(vhodné např. u reklamací či zapůjčeného zboží). Tato Doplňková služba je poskytována pouze na území České republiky. Zásilka může být tvořená pouze jedním Nákladovým kusem."
          nullable: true
        exchangeOrderNote:
          type: string
          description: Poznámka ke službě "výměnná zásilka"
          nullable: true
        documentBack:
          type: boolean
          description: "Požadavek na službu \"dokumenty zpět\". Zasílatel zajistí zpětné zasílání dokumentů, které byly obsahem Zásilky, po jejich potvrzení Příjemcem (veškeré dokumenty, které musí být podepsány Příjemcem, jsou následně zaslány \r\nna adresu Příkazce). Tato Doplňková služba je vhodná například pro smlouvy."
          nullable: true
        documentBackNote:
          type: string
          description: Poznámka ke službě "dokumenty zpět"
          nullable: true
        phoneNotification:
          type: boolean
          description: "Požadavek na službu \"telefonické potvrzení doručení zásilky\". Pokud není vyplněno, použije se telefonní číslo odesílatele. Příjemce bude Kurýrem telefonicky kontaktován pro potvrzení místa a termínu Vydání.\r\nPříkazce může určit tel.číslo ke kontaktování a poznámku s doplňujícími informacemi pro Kurýra."
          nullable: true
        phoneNotificationNumber:
          type: string
          description: Telefonní číslo pro "telefonické potvrzení doručení zásilky" příjemci v mezinárodním formátu (např. 00420123456789)
          nullable: true
        phoneNotificationNote:
          type: string
          description: Poznámka k telefonickému potvrzení doručení zásilky
          nullable: true
        smsNotification:
          type: boolean
          description: 'Požadavek na službu "SMS potvrzení doručení zásilky". Pokud není vyplněno, použije se telefonní číslo odesílatele.'
          nullable: true
        smsNotificationNumber:
          type: string
          description: "Telefonní číslo pro \"SMS potvrzení doručení zásilky\" příjemci v mezinárodním formátu (např. 00420123456789). Příjemce bude Kurýrem kontaktován prostřednictvím SMS pro potvrzení místa a termínu Vydání.\r\nPříkazce může určit tel.číslo ke kontaktování a poznámku s doplňujícími informacemi pro Kurýra."
          nullable: true
        emailNotification:
          type: boolean
          description: "Požadavek na službu \"emailové potvrzení doručení zásilky\". Příjemce bude Kurýrem e-mailem kontaktován pro potvrzení místa a termínu Vydání.\r\nPříkazce může určit e-mail ke kontaktování a poznámku s doplňujícími informacemi pro Kurýra."
          nullable: true
        emailNotificationAddress:
          type: string
          description: 'Adresa pro "emailové potvrzení doručení zásilky" příjemci. Pokud není vyplněno, použije se emailová adresa odesílatele.'
          nullable: true
        authentication:
          type: boolean
          description: "Ověření věku totožnosti příjemce. Zásilka bude Příjemci Vydána až po předložení originálu dokladu totožnosti – občanský průkaz, řidičský průkaz, cestovní pas nebo jiný identifikační doklad sjednaný ve Smlouvě. \r\nZákazník může dále požadovat i ověření věku nebo správnosti jiných údajů dle pokynů Příkazce, jako je například jméno nebo adresa. Doplňkovou službu Ověření totožnosti lze kombinovat s Doplňkovou službou \"Dokumenty zpět\"."
          nullable: true
        authenticationNote:
          type: string
          description: Poznámka k ověření totožnosti příjemce
          nullable: true
        insurance:
          type: boolean
          description: "Připojištění, zasílejte pouze u zásilek nad 500 000 Kč. Současně je třeba udat celkovou cenu pomocí hodnoty Price.\r\nJako měna bude použita hodnota z CodCurrency. Pokud není specifikována, použije se Kč."
          nullable: true
        carry:
          type: boolean
          description: 'Požadavek na službu "donos". Zasílatel zajistí Vydání Zásilky Příjemci v konkrétním oddělení, kanceláři či za dveře bytu.'
          nullable: true
        loss:
          type: boolean
          description: Požadavek na službu "odnos"
          nullable: true
        payByReceiver:
          type: boolean
          description: Požadavek na službu "dopravu platí příjemce"
          nullable: true
        packageNumberCustom:
          type: string
          description: "Vlastní pojmenování zásilky (číslo objednávky apod)\r\nPovoleny jsou pouze čísla (0-9), písmena (a-z, A-Z), pomlčka (-), lomítko (/), podtržítko (_)\r\nO maximální délce 30 znaků"
          nullable: true
        packageNumberOrder:
          type: integer
          description: Pořadové číslo balíku (u vícebalíkových zásilek)
          format: int32
          nullable: true
      additionalProperties: { }
      description: 'Pokud se balík skládá z více částí, musejí být všechny části zaslány v rámci jednoho příkazu Create'
    AddPackageDpdModel:
      type: object
      properties:
        orderId:
          type: integer
          description: 'ID objednávky, ke které daná zásilka patří'
          format: int32
          nullable: true
        serviceType:
          type: string
          description: 'Kód služby dopravce, která se použije pro danou zásilku'
          nullable: true
        recName:
          type: string
          description: Jméno a příjmení příjemce
          nullable: true
        recCompany:
          type: string
          description: Název firmy příjemce
          nullable: true
        recStreet:
          type: string
          description: Název ulice příjemce
          nullable: true
        recCity:
          type: string
          description: Název města příjemce
          nullable: true
        recZip:
          type: string
          description: PSČ příjemce
          nullable: true
        recCountry:
          type: string
          description: Kód země příjemce ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        recPhone:
          type: string
          description: Telefon příjemce i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        recEmail:
          type: string
          description: Email příjemce
          nullable: true
        coverEnabled:
          type: boolean
          description: Byla zadána krycí adresa?
          nullable: true
        coverName:
          type: string
          description: Jméno a příjmení krycí adresy
          nullable: true
        coverCompany:
          type: string
          description: Název firmy krycí adresy
          nullable: true
        coverStreet:
          type: string
          description: Název ulice krycí adresy
          nullable: true
        coverCity:
          type: string
          description: Název města krycí adresy
          nullable: true
        coverZip:
          type: string
          description: PSČ krycí adresy
          nullable: true
        coverCountry:
          type: string
          description: Kód země krycí adresy ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        coverPhone:
          type: string
          description: Telefon krycí adresy i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        coverEmail:
          type: string
          description: Email krycí adresy
          nullable: true
        senderEnabled:
          type: boolean
          description: Byla zadána adresa odesílatele?
          nullable: true
        senderName:
          type: string
          description: Jméno a příjmení adresy odesílatele
          nullable: true
        senderCompany:
          type: string
          description: Název firmy adresy odesílatele
          nullable: true
        senderStreet:
          type: string
          description: Název ulice adresy odesílatele
          nullable: true
        senderCity:
          type: string
          description: Název města adresy odesílatele
          nullable: true
        senderZip:
          type: string
          description: PSČ adresy odesílatele
          nullable: true
        senderCountry:
          type: string
          description: Kód země adresy odesílatele ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        senderPhone:
          type: string
          description: Telefon adresy odesílatele i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        senderEmail:
          type: string
          description: Email adresy odesílatele
          nullable: true
        reference:
          type: string
          description: Referenční číslo/ID zásilky. Maximálně 35 znaků.
          nullable: true
        reference2:
          type: string
          description: Referenční číslo/ID zásilky
          nullable: true
        piecesCount:
          type: integer
          description: Počet balíků v zásilce
          format: int32
        weight:
          type: number
          description: Celková váha zásilky v kg
          format: double
        note:
          type: string
          description: Poznámka dopravci (maximální délka 64 znaků).
          nullable: true
        price:
          type: number
          description: Udávaná hodnota zásilky
          format: double
        branchId:
          type: string
          description: ID výdejního místa. Seznam výdejních míst je možné získat přes metodu Branches
          nullable: true
        codPrice:
          type: number
          description: Hodnota dobírky. Může být desetinné číslo.
          format: double
          nullable: true
        codCurrency:
          type: string
          description: Měna dobírky v ISO 4217 formátu (CZK)
          nullable: true
        creditCard:
          type: boolean
          description: 'Příznak, zda lze dobírku platit kartou. Výchozí hodnota je false'
          nullable: true
        bankCode:
          type: string
          description: Kód banky
          nullable: true
        bankName:
          type: string
          description: Jméno banky
          nullable: true
        bankAccountNumber:
          type: string
          description: Číslo bankovního účtu
          nullable: true
        bankAccountName:
          type: string
          description: Jméno účtu
          nullable: true
        vs:
          type: string
          description: 'Variabilní symbol dobírky, povinný pro dobírkové zásilky'
          nullable: true
        iban:
          type: string
          description: Číslo bankovního účtu ve formátu IBAN
          nullable: true
        swift:
          type: string
          description: Číslo bankovního účtu ve formátu IBAN
          nullable: true
        exchangeOrder:
          type: boolean
          description: 'Informace, zda se přidá služba Výměnná zásilka (swap). Pokud je nastaveno na true, bude vytvořen stejný počet výměnných zásilek, jako je vytvořen počet balíků v zásilce (swapCount = piecesCount). Jedná o omezení DPD API.'
          nullable: true
        smsNotification:
          type: boolean
          description: SMS upozornění před doručením zásilky
          nullable: true
        insurance:
          type: boolean
          description: 'Připojištění, zasílejte pouze u zásilek nad 50 000 Kč. Současně je třeba udat celkovou cenu pomocí hodnoty Price.'
          nullable: true
        insuranceCurrency:
          type: string
          description: 'Měna připojištění, pokud není  zadáno, bere se výchozí měna "CZK"'
          nullable: true
        packageNumberCustom:
          type: string
          description: "Vlastní pojmenování zásilky (číslo objednávky apod)\r\nPovoleny jsou pouze čísla (0-9), písmena (a-z, A-Z), pomlčka (-), lomítko (/), podtržítko (_)\r\nO maximální délce 30 znaků"
          nullable: true
        packageNumberOrder:
          type: integer
          description: Pořadové číslo balíku (u vícebalíkových zásilek)
          format: int32
          nullable: true
        shopToShop:
          type: boolean
          description: ShopToShop
          nullable: true
        shopToHome:
          type: boolean
          description: ShopToHome
          nullable: true
        authenticationName:
          type: string
          description: Ověření totožnosti příjemce
          nullable: true
        authenticationId:
          type: string
          description: 'Číslo identifikačního dokladu příjemce. Nepovinné a použije se pouze v případě, že vyplníte hodnotu AuthenticationName.'
          nullable: true
      additionalProperties: { }
      description: 'Pokud se balík skládá z více částí, musejí být všechny části zaslány v rámci jednoho příkazu Create'
    AddPackageGeisModel:
      type: object
      properties:
        orderId:
          type: integer
          description: 'ID objednávky, ke které daná zásilka patří'
          format: int32
          nullable: true
        serviceType:
          type: string
          description: 'Kód služby dopravce, která se použije pro danou zásilku'
          nullable: true
        recName:
          type: string
          description: Jméno a příjmení příjemce
          nullable: true
        recCompany:
          type: string
          description: Název firmy příjemce
          nullable: true
        recStreet:
          type: string
          description: Název ulice příjemce
          nullable: true
        recCity:
          type: string
          description: Název města příjemce
          nullable: true
        recZip:
          type: string
          description: PSČ příjemce
          nullable: true
        recCountry:
          type: string
          description: Kód země příjemce ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        recPhone:
          type: string
          description: Telefon příjemce i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        recEmail:
          type: string
          description: Email příjemce
          nullable: true
        coverEnabled:
          type: boolean
          description: Byla zadána krycí adresa?
          nullable: true
        coverName:
          type: string
          description: Jméno a příjmení krycí adresy
          nullable: true
        coverCompany:
          type: string
          description: Název firmy krycí adresy
          nullable: true
        coverStreet:
          type: string
          description: Název ulice krycí adresy
          nullable: true
        coverCity:
          type: string
          description: Název města krycí adresy
          nullable: true
        coverZip:
          type: string
          description: PSČ krycí adresy
          nullable: true
        coverCountry:
          type: string
          description: Kód země krycí adresy ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        coverPhone:
          type: string
          description: Telefon krycí adresy i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        coverEmail:
          type: string
          description: Email krycí adresy
          nullable: true
        senderEnabled:
          type: boolean
          description: Byla zadána adresa odesílatele?
          nullable: true
        senderName:
          type: string
          description: Jméno a příjmení adresy odesílatele
          nullable: true
        senderCompany:
          type: string
          description: Název firmy adresy odesílatele
          nullable: true
        senderStreet:
          type: string
          description: Název ulice adresy odesílatele
          nullable: true
        senderCity:
          type: string
          description: Název města adresy odesílatele
          nullable: true
        senderZip:
          type: string
          description: PSČ adresy odesílatele
          nullable: true
        senderCountry:
          type: string
          description: Kód země adresy odesílatele ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        senderPhone:
          type: string
          description: Telefon adresy odesílatele i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        senderEmail:
          type: string
          description: Email adresy odesílatele
          nullable: true
        reference:
          type: string
          description: Zákaznická reference zásilky
          nullable: true
        note:
          type: string
          description: Vlastní poznámka při vložení balíku do databáze
          nullable: true
        noteRec:
          type: string
          description: Poznámka pro příjemce
          nullable: true
        noteDriver:
          type: string
          description: Poznámka pro řidiče
          nullable: true
        packageNumberCustom:
          type: string
          description: "Vlastní pojmenování zásilky (číslo objednávky apod)\r\nPovoleny jsou pouze čísla (0-9), písmena (a-z, A-Z), pomlčka (-), lomítko (/), podtržítko (_)\r\nO maximální délce 30 znaků"
          nullable: true
        packageNumberOrder:
          type: integer
          description: Pořadové číslo balíku (u vícebalíkových zásilek)
          format: int32
          nullable: true
        price:
          type: number
          description: Udávaná hodnota zásilky
          format: double
        codPrice:
          type: number
          description: Hodnota dobírky
          format: double
          nullable: true
        codCurrency:
          type: string
          description: Měna dobírky
          nullable: true
        insurancePrice:
          type: number
          description: "Připojištění, zasílejte pouze u zásilek nad 500 000 Kč. Současně je třeba udat celkovou cenu pomocí hodnoty Price.\r\nJako měna bude použita hodnota z CodCurrency. Pokud není specifikována, použije se Kč."
          format: double
          nullable: true
        vs:
          type: string
          description: Variabilní symbol dobírky
          nullable: true
        volume:
          type: number
          description: Objem v m3
          format: double
          nullable: true
        width:
          type: number
          description: Šířka v metrech
          format: double
          nullable: true
        height:
          type: number
          description: Výška v metrech
          format: double
          nullable: true
        length:
          type: number
          description: Délka v metrech
          format: double
          nullable: true
        weight:
          type: number
          description: Váha v kg
          format: double
        manipulationUnit:
          type: string
          description: Kód manipulační jednotky
          nullable: true
        piecesCount:
          type: integer
          description: Počet paletových míst
          format: int32
        iban:
          type: string
          description: 'Číslo bankovního účtu (IBAN) pro zaslání dobírky. Nezadávejte, pokud je stejné jako v nastavení dopravce.'
          nullable: true
        smsNotification:
          type: boolean
          description: SMS avízo - poslat SMS příjemci
          nullable: true
        phoneNotification:
          type: boolean
          description: Telefonické avizo - volat příjemci
          nullable: true
        pickupDate:
          type: string
          description: 'Datum svozu zásilky ve formátu YYYY-MM-DD. Expedici (HomeExpedition) lze vytvořit na aktuální den, Objednávka (HomeOrder) lze vytvořit nejdříve na následující den.'
          nullable: true
      additionalProperties: { }
      description: 'Pokud se balík skládá z více částí, musejí být všechny části zaslány v rámci jednoho příkazu Create'
    AddPackagePplModel:
      type: object
      properties:
        orderId:
          type: integer
          description: 'ID objednávky, ke které daná zásilka patří'
          format: int32
          nullable: true
        serviceType:
          type: string
          description: 'Kód služby dopravce, která se použije pro danou zásilku'
          nullable: true
        recName:
          type: string
          description: Jméno a příjmení příjemce
          nullable: true
        recCompany:
          type: string
          description: Název firmy příjemce
          nullable: true
        recStreet:
          type: string
          description: Název ulice příjemce
          nullable: true
        recCity:
          type: string
          description: Název města příjemce
          nullable: true
        recZip:
          type: string
          description: PSČ příjemce
          nullable: true
        recCountry:
          type: string
          description: Kód země příjemce ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        recPhone:
          type: string
          description: Telefon příjemce i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        recEmail:
          type: string
          description: Email příjemce
          nullable: true
        coverEnabled:
          type: boolean
          description: Byla zadána krycí adresa?
          nullable: true
        coverName:
          type: string
          description: Jméno a příjmení krycí adresy
          nullable: true
        coverCompany:
          type: string
          description: Název firmy krycí adresy
          nullable: true
        coverStreet:
          type: string
          description: Název ulice krycí adresy
          nullable: true
        coverCity:
          type: string
          description: Název města krycí adresy
          nullable: true
        coverZip:
          type: string
          description: PSČ krycí adresy
          nullable: true
        coverCountry:
          type: string
          description: Kód země krycí adresy ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        coverPhone:
          type: string
          description: Telefon krycí adresy i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        coverEmail:
          type: string
          description: Email krycí adresy
          nullable: true
        senderEnabled:
          type: boolean
          description: Byla zadána adresa odesílatele?
          nullable: true
        senderName:
          type: string
          description: Jméno a příjmení adresy odesílatele
          nullable: true
        senderCompany:
          type: string
          description: Název firmy adresy odesílatele
          nullable: true
        senderStreet:
          type: string
          description: Název ulice adresy odesílatele
          nullable: true
        senderCity:
          type: string
          description: Název města adresy odesílatele
          nullable: true
        senderZip:
          type: string
          description: PSČ adresy odesílatele
          nullable: true
        senderCountry:
          type: string
          description: Kód země adresy odesílatele ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        senderPhone:
          type: string
          description: Telefon adresy odesílatele i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        senderEmail:
          type: string
          description: Email adresy odesílatele
          nullable: true
        reference:
          type: string
          description: Referenční číslo/ID zásilky
          nullable: true
        piecesCount:
          type: integer
          description: Počet balíků v zásilce
          format: int32
        weight:
          type: number
          description: Celková váha zásilky v kg
          format: double
        note:
          type: string
          description: Vlastní poznámka při vložení balíku do databáze
          nullable: true
        price:
          type: number
          description: Udávaná hodnota zásilky
          format: double
        branchId:
          type: string
          description: 'ID výdejního místa. Seznam výdejních míst je možné získat přes metodu {{dopravce}}/Branches'
          nullable: true
        codPrice:
          type: number
          description: Hodnota dobírky. Nastavuje se celková hodnota pro celou zásilku a pouze u první položky
          format: double
          nullable: true
        codCurrency:
          type: string
          description: Měna dobírky
          nullable: true
        ageCheck:
          type: string
          description: Ověření věku příjemce. Možné hodnoty jsou 15 = 15+ a 18 = 18+
          nullable: true
        allowNextDelivery:
          type: boolean
          nullable: true
        insurance:
          type: boolean
          description: Částka připojištění.
          nullable: true
        packageNumberCustom:
          type: string
          description: "Vlastní pojmenování zásilky (číslo objednávky apod)\r\nPovoleny jsou pouze čísla (0-9), písmena (a-z, A-Z), pomlčka (-), lomítko (/), podtržítko (_)\r\nO maximální délce 30 znaků"
          nullable: true
        packageNumberOrder:
          type: integer
          description: Pořadové číslo balíku (u vícebalíkových zásilek)
          format: int32
          nullable: true
      additionalProperties: { }
      description: 'Pokud se balík skládá z více částí, musejí být všechny části zaslány v rámci jednoho příkazu Create'
    AddPackageWedoModel:
      type: object
      properties:
        orderId:
          type: integer
          description: 'ID objednávky, ke které daná zásilka patří'
          format: int32
          nullable: true
        serviceType:
          type: string
          description: 'Kód služby dopravce, která se použije pro danou zásilku'
          nullable: true
        recName:
          type: string
          description: Jméno a příjmení příjemce
          nullable: true
        recCompany:
          type: string
          description: Název firmy příjemce
          nullable: true
        recStreet:
          type: string
          description: Název ulice příjemce
          nullable: true
        recCity:
          type: string
          description: Název města příjemce
          nullable: true
        recZip:
          type: string
          description: PSČ příjemce
          nullable: true
        recCountry:
          type: string
          description: Kód země příjemce ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        recPhone:
          type: string
          description: Telefon příjemce i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        recEmail:
          type: string
          description: Email příjemce
          nullable: true
        coverEnabled:
          type: boolean
          description: Byla zadána krycí adresa?
          nullable: true
        coverName:
          type: string
          description: Jméno a příjmení krycí adresy
          nullable: true
        coverCompany:
          type: string
          description: Název firmy krycí adresy
          nullable: true
        coverStreet:
          type: string
          description: Název ulice krycí adresy
          nullable: true
        coverCity:
          type: string
          description: Název města krycí adresy
          nullable: true
        coverZip:
          type: string
          description: PSČ krycí adresy
          nullable: true
        coverCountry:
          type: string
          description: Kód země krycí adresy ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        coverPhone:
          type: string
          description: Telefon krycí adresy i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        coverEmail:
          type: string
          description: Email krycí adresy
          nullable: true
        senderEnabled:
          type: boolean
          description: Byla zadána adresa odesílatele?
          nullable: true
        senderName:
          type: string
          description: Jméno a příjmení adresy odesílatele
          nullable: true
        senderCompany:
          type: string
          description: Název firmy adresy odesílatele
          nullable: true
        senderStreet:
          type: string
          description: Název ulice adresy odesílatele
          nullable: true
        senderCity:
          type: string
          description: Název města adresy odesílatele
          nullable: true
        senderZip:
          type: string
          description: PSČ adresy odesílatele
          nullable: true
        senderCountry:
          type: string
          description: Kód země adresy odesílatele ve formátu dle ISO 3166-1 alpha-2.
          nullable: true
        senderPhone:
          type: string
          description: Telefon adresy odesílatele i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        senderEmail:
          type: string
          description: Email adresy odesílatele
          nullable: true
        reference:
          type: string
          description: Referenční číslo/ID zásilky
          nullable: true
        reference2:
          type: string
          description: Druhé referenční číslo/ID zásilky
          nullable: true
        piecesCount:
          type: integer
          description: Počet balíků v zásilce
          format: int32
        weight:
          type: number
          description: Celková váha zásilky v kg
          format: double
        note:
          type: string
          description: Vlastní poznámka při vložení balíku do databáze
          nullable: true
        price:
          type: number
          description: Udávaná hodnota zásilky
          format: double
        branchId:
          type: string
          description: 'ID výdejního místa. Seznam výdejních míst je možné získat přes metodu {{dopravce}}/Branches'
          nullable: true
        codPrice:
          type: number
          description: Hodnota dobírky. Nastavuje se celková hodnota pro celou zásilku a pouze u první položky
          format: double
          nullable: true
        reverseOrder:
          type: boolean
          description: Požadavek na službu "zpětná zásilka". Zasílatel zajistí vyzvednutí Zásilky kdekoliv na území vybraných zemí EU a zajistí její přepravu zpět na svozové místo Příkazce.
          nullable: true
        directOrder:
          type: boolean
          description: Požadavek na službu "přímá zásilka". Zasílatel zajistí převzetí Zásilky na adrese mimo pravidelné svozové místo (například přímo u dodavatele) a její Vydání Příjemci.Tato doplňková služba je poskytována pouze na území České republiky a Slovenské republiky.
          nullable: true
        exchangeOrder:
          type: boolean
          description: "Požadavek na službu \"výměnná zásilka\". Současně při doručení Zásilky Příjemci Zasílatel zajistí vyzvednutí druhé zásilky od Příjemce a doručí ji Příkazci. Bez vyzvednutí zásilky adresované Příkazci nebude Příjemci Zásilka předána \r\n(vhodné např. u reklamací či zapůjčeného zboží). Tato Doplňková služba je poskytována pouze na území České republiky. Zásilka může být tvořená pouze jedním Nákladovým kusem."
          nullable: true
        exchangeOrderNote:
          type: string
          description: Poznámka ke službě "výměnná zásilka"
          nullable: true
        documentBack:
          type: boolean
          description: "Požadavek na službu \"dokumenty zpět\". Zasílatel zajistí zpětné zasílání dokumentů, které byly obsahem Zásilky, po jejich potvrzení Příjemcem (veškeré dokumenty, které musí být podepsány Příjemcem, jsou následně zaslány \r\nna adresu Příkazce). Tato Doplňková služba je vhodná například pro smlouvy."
          nullable: true
        documentBackNote:
          type: string
          description: Poznámka ke službě "dokumenty zpět"
          nullable: true
        phoneNotification:
          type: boolean
          description: "Požadavek na službu \"telefonické potvrzení doručení zásilky\". Pokud není vyplněno, použije se telefonní číslo odesílatele. Příjemce bude Kurýrem telefonicky kontaktován pro potvrzení místa a termínu Vydání.\r\nPříkazce může určit tel.číslo ke kontaktování a poznámku s doplňujícími informacemi pro Kurýra."
          nullable: true
        phoneNotificationNumber:
          type: string
          description: Telefonní číslo pro "telefonické potvrzení doručení zásilky" příjemci v mezinárodním formátu (např. 00420123456789)
          nullable: true
        phoneNotificationNote:
          type: string
          description: Poznámka k telefonickému potvrzení doručení zásilky
          nullable: true
        smsNotification:
          type: boolean
          description: 'Požadavek na službu "SMS potvrzení doručení zásilky". Pokud není vyplněno, použije se telefonní číslo odesílatele.'
          nullable: true
        smsNotificationNumber:
          type: string
          description: "Telefonní číslo pro \"SMS potvrzení doručení zásilky\" příjemci v mezinárodním formátu (např. 00420123456789). Příjemce bude Kurýrem kontaktován prostřednictvím SMS pro potvrzení místa a termínu Vydání.\r\nPříkazce může určit tel.číslo ke kontaktování a poznámku s doplňujícími informacemi pro Kurýra."
          nullable: true
        emailNotification:
          type: boolean
          description: "Požadavek na službu \"emailové potvrzení doručení zásilky\". Příjemce bude Kurýrem e-mailem kontaktován pro potvrzení místa a termínu Vydání.\r\nPříkazce může určit e-mail ke kontaktování a poznámku s doplňujícími informacemi pro Kurýra."
          nullable: true
        emailNotificationAddress:
          type: string
          description: 'Adresa pro "emailové potvrzení doručení zásilky" příjemci. Pokud není vyplněno, použije se emailová adresa odesílatele.'
          nullable: true
        authentication:
          type: boolean
          description: "Ověření věku totožnosti příjemce. Zásilka bude Příjemci Vydána až po předložení originálu dokladu totožnosti – občanský průkaz, řidičský průkaz, cestovní pas nebo jiný identifikační doklad sjednaný ve Smlouvě. \r\nZákazník může dále požadovat i ověření věku nebo správnosti jiných údajů dle pokynů Příkazce, jako je například jméno nebo adresa. Doplňkovou službu Ověření totožnosti lze kombinovat s Doplňkovou službou \"Dokumenty zpět\"."
          nullable: true
        authenticationNote:
          type: string
          description: Poznámka k ověření totožnosti příjemce
          nullable: true
        insurance:
          type: boolean
          description: "Připojištění, zasílejte pouze u zásilek nad 500 000 Kč. Současně je třeba udat celkovou cenu pomocí hodnoty Price.\r\nJako měna bude použita hodnota z CodCurrency. Pokud není specifikována, použije se Kč."
          nullable: true
        carry:
          type: boolean
          description: 'Požadavek na službu "donos". Zasílatel zajistí Vydání Zásilky Příjemci v konkrétním oddělení, kanceláři či za dveře bytu.'
          nullable: true
        loss:
          type: boolean
          description: Požadavek na službu "odnos"
          nullable: true
        payByReceiver:
          type: boolean
          description: Požadavek na službu "dopravu platí příjemce"
          nullable: true
        packageNumberCustom:
          type: string
          description: "Vlastní pojmenování zásilky (číslo objednávky apod)\r\nPovoleny jsou pouze čísla (0-9), písmena (a-z, A-Z), pomlčka (-), lomítko (/), podtržítko (_)\r\nO maximální délce 30 znaků"
          nullable: true
        packageNumberOrder:
          type: integer
          description: Pořadové číslo balíku (u vícebalíkových zásilek)
          format: int32
          nullable: true
      additionalProperties: { }
      description: 'Pokud se balík skládá z více částí, musejí být všechny části zaslány v rámci jednoho příkazu Create'
    AddressListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AddressModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
    AddressModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        name:
          type: string
          description: Jméno a příjmení příjemce
          nullable: true
        company:
          type: string
          description: Název firmy příjemce
          nullable: true
        street:
          type: string
          description: Název ulice příjemce
          nullable: true
        city:
          type: string
          description: Název města příjemce
          nullable: true
        zip:
          type: string
          description: PSČ příjemce
          nullable: true
        phone:
          type: string
          description: Telefon příjemce i s předvolbou ve formátu +AAACCCEEEGGG
          nullable: true
        email:
          type: string
          description: Email příjemce
          nullable: true
        country:
          type: string
          description: Kód země příjemce (2 znaky ISO)
          nullable: true
        countryName:
          type: string
          description: Název země příjemce
          nullable: true
        isEnabled:
          type: boolean
          description: 'Je adresa aktivní? Umožňuje skrýt neaktivní/smazané adresy, které však jsou navázány na položky v systému'
        type:
          type: integer
          description: Typ adresy
          format: int32
        additionalInfo:
          type: string
          description: Doplňkový text k adrese
          nullable: true
        taxNumber:
          type: string
          description: IČ
          nullable: true
        vatNumber:
          type: string
          description: DIČ
          nullable: true
        taxId:
          type: string
          description: IČ DPH pro slováky
          nullable: true
        externalCode:
          type: string
          description: Externí číslo zákazníka
          nullable: true
      additionalProperties: false
    AddressSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          nullable: true
        addressType:
          type: integer
          format: int32
          nullable: true
        showDisabled:
          type: boolean
          nullable: true
      additionalProperties: false
    ApiError:
      type: object
      properties:
        errorCode:
          type: integer
          description: Kód chyby
          format: int32
          example: 404
        message:
          type: string
          description: Text chybového hlášení
          nullable: true
          example: Entity not found
        reference:
          type: string
          description: ID referencované entity
          nullable: true
          example: DA93782107237
      additionalProperties: false
    ApplicationActivateModel:
      type: object
      properties:
        code:
          type: string
          description: 'Kód aplikace, kterou chceme aktivovat. Seznam dostupných aplikací je možné získat zavoláním /Application/Types'
          nullable: true
      additionalProperties: { }
    ApplicationCarrierModel:
      type: object
      properties:
        id:
          type: integer
          description: ID stavu objednávky
          format: int32
        applicationId:
          type: integer
          description: 'ID aplikace, ke kterému stav patří'
          format: int32
        sourceId:
          type: array
          items:
            type: string
          description: Kód stavového kódu ze zdrojového systému. Může být číslo i text. Následně je hodnota upravena dle cílového systému.
          nullable: true
        name:
          type: string
          description: Název stavu objednávky
          nullable: true
        carrierCode:
          type: string
          description: Kód dopravce
          nullable: true
        carrierName:
          type: string
          description: Název dopravce
          nullable: true
        serviceCode:
          type: string
          description: Kód služby dopravce
          nullable: true
        serviceName:
          type: string
          description: Název služby dopravce
          nullable: true
      additionalProperties: false
    ApplicationListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
    ApplicationModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        type:
          $ref: '#/components/schemas/ApplicationTypeModel'
        domain:
          type: string
          description: 'Doména, pod kterou běží aplikace'
          nullable: true
        note:
          type: string
          description: Vlastní popis napojení (poznámka)
          nullable: true
        activated:
          type: string
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/ApplicationStatus'
      additionalProperties: { }
    ApplicationSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          nullable: true
        applicationType:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ApplicationStatus:
      enum:
        - Inactive
        - Active
        - WaitingActivation
        - Deleted
      type: string
    ApplicationTypeModel:
      type: object
      properties:
        code:
          type: string
          description: Unikátní kód aplikace
          nullable: true
        name:
          type: string
          description: Název aplikace
          nullable: true
        description:
          type: string
          description: Krátký popis aplikace
          nullable: true
      additionalProperties: false
    BranchSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        branchType:
          $ref: '#/components/schemas/CarrierBranchType'
        country:
          type: string
          description: ISO kód země (2 znaky) pro filtrování seznamu pobožek
          nullable: true
        name:
          type: string
          description: 'Jedno klíčové slovo bez mezery pro vyhledávání v názvu, městu nebo ulici'
          nullable: true
      additionalProperties: false
      description: Vyhledá seznam poboček
    CarrierBranchType:
      enum:
        - Branch
        - Box
      type: string
    CarrierManipulationUnitSearchModel:
      type: object
      properties:
        carrierCode:
          type: string
          nullable: true
      additionalProperties: false
    CarrierServiceSearchModel:
      type: object
      properties:
        carrierCode:
          type: string
          nullable: true
      additionalProperties: false
    ChangeEmailModel:
      type: object
      properties:
        newEmail:
          type: string
          nullable: true
      additionalProperties: false
    ChangePasswordModel:
      type: object
      properties:
        currentPassword:
          type: string
          nullable: true
        newPassword:
          type: string
          nullable: true
      additionalProperties: false
    EmailAccountListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmailAccountModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
      description: Represents an email account list model
    EmailAccountModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        email:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        host:
          type: string
          nullable: true
        port:
          type: integer
          format: int32
        username:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
        enableSsl:
          type: boolean
        isDefaultEmailAccount:
          type: boolean
      additionalProperties: false
      description: Represents an email account model
    EmailAccountSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          nullable: true
      additionalProperties: false
      description: Represents an email account search model
    EmailAccountTestModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        sendToEmail:
          type: string
          nullable: true
      additionalProperties: false
    LabelOrderModel:
      type: object
      properties:
        orders:
          type: array
          items:
            type: integer
            format: int32
          description: Seznam čísel objednávek
          nullable: true
        skip:
          type: integer
          description: 'Počet pozic, které se mají přeskočit'
          format: int32
          nullable: true
        onePerPage:
          type: boolean
          description: 'Informace, zda vytisknout jeden štítek na stránku'
          nullable: true
      additionalProperties: false
      description: Model pro tisk štítků k objednávkám
    LabelPackageModel:
      type: object
      properties:
        packages:
          type: array
          items:
            type: integer
            format: int32
          description: Seznam čísel zásilek
          nullable: true
        skip:
          type: integer
          description: 'Počet pozic, které se mají přeskočit'
          format: int32
          nullable: true
        onePerPage:
          type: boolean
          description: 'Informace, zda vytisknout jeden štítek na stránku'
          nullable: true
      additionalProperties: false
      description: Model pro tisk štítků k zásilkám
    LayoutTypeEnum:
      enum:
        - Row
        - Grid
      type: string
    LayoutWidthEnum:
      enum:
        - Fixed
        - Responsive
      type: string
      description: Typ layoutu v app.balikuj.cz
    MessageTemplateListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MessageTemplateModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
      description: Represents a message template list model
    MessageTemplateModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        allowedTokens:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        bccEmailAddresses:
          type: string
          nullable: true
        subject:
          type: string
          nullable: true
        body:
          type: string
          nullable: true
        isActive:
          type: boolean
        sendImmediately:
          type: boolean
        delayBeforeSend:
          type: integer
          format: int32
          nullable: true
        delayPeriodId:
          type: integer
          format: int32
        hasAttachedDownload:
          type: boolean
        attachedDownloadName:
          type: string
          nullable: true
        emailAccountId:
          type: integer
          format: int32
      additionalProperties: false
      description: Represents a message template model
    MessageTemplateSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          nullable: true
        isActiveId:
          type: integer
          format: int32
      additionalProperties: false
      description: Represents a message template search model
    OrderApplicationModel:
      type: object
      properties:
        id:
          type: integer
          description: 'ID aplikace, ve které vznikla objednávka'
          format: int32
        domain:
          type: string
          description: 'Doména aplikace, ve které vznikla objednávka'
          nullable: true
        code:
          type: string
          description: Kód typu aplikace
          nullable: true
      additionalProperties: false
    OrderCarrierModel:
      type: object
      properties:
        carrierCode:
          type: string
          description: Kód dopravce
          nullable: true
        carrierName:
          type: string
          description: Název dopravce
          nullable: true
        serviceCode:
          type: string
          description: Kód služby dopravce
          nullable: true
        serviceName:
          type: string
          description: Název služby dopravce
          nullable: true
      additionalProperties: false
    OrderCreatePackagesRequest:
      type: object
      properties:
        orders:
          type: array
          items:
            type: integer
            format: int32
          description: 'Seznam ID objednávek, pro které chceme vytvořit zásilky dle výchozího nastavení'
          nullable: true
      additionalProperties: false
    OrderItemModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        availability:
          type: string
          description: 'dostupnost produktu ve chvíli, kdy byl objednán'
          nullable: true
        buyPriceVat:
          type: number
          description: DPH nákupní ceny
          format: double
          nullable: true
        buyPriceVatRate:
          type: number
          description: Sazba DPH nákupní ceny
          format: double
          nullable: true
        buyPriceWithoutVat:
          type: number
          description: Nákupní cena bez DPH
          format: double
          nullable: true
        buyPriceWithVat:
          type: number
          description: Nákupní cena s DPH
          format: double
          nullable: true
        code:
          type: string
          description: Kód produktu
          nullable: true
        ean:
          type: string
          description: EAN kód produktu produktu
          nullable: true
        imageUrl:
          type: string
          description: Adresa obrázku
          nullable: true
        itemPriceVat:
          type: number
          description: DPH položky
          format: double
          nullable: true
        itemPriceVatRate:
          type: number
          description: Sazba DPH položky
          format: double
          nullable: true
        itemPriceWithoutVat:
          type: number
          description: Cena položky bez DPH
          format: double
          nullable: true
        itemPriceWithVat:
          type: number
          description: Cena položky včetně DPH
          format: double
          nullable: true
        itemType:
          type: string
          description: Typ produktu
          nullable: true
        jsonData:
          type: string
          description: JSON data
          nullable: true
        name:
          type: string
          description: Název produktu
          nullable: true
        note:
          type: string
          description: Poznámka
          nullable: true
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemParameter'
          description: Parametry položky
          nullable: true
        productGuid:
          type: string
          description: Unikátní identifikátor produktu
          nullable: true
        quantity:
          type: number
          description: Množství  jednotek
          format: double
        recyclingFee:
          type: number
          description: Recyklační poplatek
          format: double
          nullable: true
        resolved:
          type: boolean
          description: 'Označuje, zda byla položka vyřešena/vyskladněna'
        stockLocation:
          type: string
          description: Pozice ve skladu
          nullable: true
        totalVat:
          type: number
          description: DPH za všechny položky
          format: double
        totalWithoutVat:
          type: number
          description: Celková cena za všechny položky bez DPH
          format: double
        totalWithVat:
          type: number
          description: Celková cena za všechny položky vč. DPH
          format: double
        unit:
          type: string
          description: Jednotka produktu
          nullable: true
        variantName:
          type: string
          description: Název varianty
          nullable: true
        weight:
          type: number
          description: Váha produktu
          format: double
          nullable: true
      additionalProperties: { }
    OrderItemParameter:
      type: object
      properties:
        code:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        price:
          type: number
          format: double
      additionalProperties: false
    OrderItemUpdateModel:
      type: object
      properties:
        items:
          type: array
          items:
            type: integer
            format: int32
          description: 'Seznam ID položek, pro které chceme stav změnit'
          nullable: true
        resolved:
          type: boolean
          description: Umožňuje označit danou položku objednávky jako vyřešenou/nevyřešenou
          nullable: true
      additionalProperties: false
    OrderListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/OrderModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
    OrderModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        adminUrl:
          type: string
          description: Admin Url?
          nullable: true
        application:
          $ref: '#/components/schemas/OrderApplicationModel'
        billingAddress:
          $ref: '#/components/schemas/AddressModel'
        canceled:
          type: string
          description: Datum smazání objednávky
          format: date-time
          nullable: true
        carrier:
          $ref: '#/components/schemas/OrderCarrierModel'
        created:
          type: string
          description: Datum vytvoření
          format: date-time
        currency:
          type: string
          description: 'Měna objednávky, třímístný ISO 4217 kód https://en.wikipedia.org/wiki/ISO_4217'
          nullable: true
        customerNote:
          type: string
          description: Zákaznická poznámka u objednávky
          nullable: true
        deliveryAddress:
          $ref: '#/components/schemas/AddressModel'
        exchangeRate:
          type: number
          description: Směnný kurz
          format: double
          nullable: true
        externalCode:
          type: string
          description: Externí číslo objednávky
          nullable: true
        internalNote:
          type: string
          description: Interní poznámka u objednávky
          nullable: true
        isPaid:
          type: boolean
          description: Je objednávka uhrazená?
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemModel'
          description: Položky objednávky
          nullable: true
        jsonData:
          type: string
          description: JSON data
          nullable: true
        language:
          type: string
          description: Jazyk
          nullable: true
        note:
          type: string
          description: Vlastní poznámka v systému Balíkuj
          nullable: true
        orderNumber:
          type: string
          description: ID objednávky
          nullable: true
        orderStatusId:
          type: integer
          format: int32
        origin:
          type: string
          description: Původ objednávky
          nullable: true
        paidDate:
          type: string
          description: Datum úhrady objednávky
          format: date-time
          nullable: true
        payment:
          $ref: '#/components/schemas/OrderPaymentModel'
        paymentVat:
          type: number
          description: Cena platební metody z dopravy
          format: double
          nullable: true
        paymentVatRate:
          type: number
          description: Sazba DPH platební metody
          format: double
          nullable: true
        paymentWithoutVat:
          type: number
          description: Cena platební metody bez DPH
          format: double
          nullable: true
        paymentWithVat:
          type: number
          description: Cena platební metody vč. DPH
          format: double
          nullable: true
        piecesCount:
          type: number
          description: Počet kůsu zásilek (balíků) dle nastavení dopravce nebo vlastního nastavení v přehledu objednávek. Slouží pro doplnění požadovaných hodnot jednotlivých dopravců při automatizovaném tisku štítků.
          format: double
          nullable: true
        resolved:
          type: boolean
          description: Umožňuje označit zvolenou objednávku nebo položky objednávky jako vyřešené. Užitečné zejména pokud nejsou všechny položky expedovány apod.
        shippingVat:
          type: number
          description: Hodnota DPH z dopravy
          format: double
          nullable: true
        shippingVatRate:
          type: number
          description: Sazba DPH dopravy
          format: double
          nullable: true
        shippingWithoutVat:
          type: number
          description: Cena dopravy bez DPH
          format: double
          nullable: true
        shippingWithVat:
          type: number
          description: Cena dopravy vč. DPH
          format: double
          nullable: true
        status:
          $ref: '#/components/schemas/OrderStatusModel'
        stockId:
          type: string
          description: ID skladu
          nullable: true
        totalToPay:
          type: number
          description: Celková cena zaokrouhlená dle nastavení aplikace / zákazníka
          format: double
        totalVat:
          type: number
          description: Částka DPH
          format: double
          nullable: true
        totalWeight:
          type: number
          description: Celková váha
          format: double
          nullable: true
        totalWithoutVat:
          type: number
          description: Celková cena vč. DPH
          format: double
          nullable: true
        totalWithVat:
          type: number
          description: Celková cena vč. DPH bez zaokrouhlení
          format: double
          nullable: true
        updated:
          type: string
          description: Datum poslední úpravy
          format: date-time
        vs:
          type: string
          description: Variabilní symbol
          nullable: true
      additionalProperties: { }
    OrderPaymentCreateModel:
      type: object
      properties:
        sourceId:
          type: array
          items:
            type: string
          description: Kód platební metody ze zdrojového systému. Může být číslo i text. Následně je hodnota upravena dle cílového systému.
          nullable: true
        name:
          type: string
          description: Název platební metody
          nullable: true
        isSystem:
          type: boolean
          description: 'Informace, zda se jedná o systémovou platební metodu. Systémové platební metody nelze smazat, lze pouze namapovat externí platební metody na SourceId.'
        imageUrl:
          type: string
          description: Cesta k logu/obrázku
          nullable: true
        displayOrder:
          type: integer
          description: Pořadí výpisu tohoto stavového kódu
          format: int32
      additionalProperties: false
    OrderPaymentModel:
      type: object
      properties:
        id:
          type: integer
          description: ID platební metody
          format: int32
        applicationId:
          type: integer
          description: 'ID aplikace, ke kterém platební metoda patří'
          format: int32
        sourceId:
          type: array
          items:
            type: string
          description: Kód platební metody ze zdrojového systému. Může být číslo i text. Následně je hodnota upravena dle cílového systému.
          nullable: true
        name:
          type: string
          description: Název platební metody
          nullable: true
        isSystem:
          type: boolean
          description: 'Informace, zda se jedná o systémovou platební metodu. Systémové platební metody nelze smazat, lze pouze namapovat externí platební metody na SourceId.'
        imageUrl:
          type: string
          description: Cesta k logu/obrázku
          nullable: true
        displayOrder:
          type: integer
          description: Pořadí výpisu tohoto stavového kódu
          format: int32
      additionalProperties: false
    OrderPaymentUpdateModel:
      type: object
      properties:
        sourceId:
          type: array
          items:
            type: string
          description: Kód platební metody ze zdrojového systému. Může být číslo i text. Následně je hodnota upravena dle cílového systému.
          nullable: true
        name:
          type: string
          description: Název platební metody
          nullable: true
        isSystem:
          type: boolean
          description: 'Informace, zda se jedná o systémovou platební metodu. Systémové platební metody nelze smazat, lze pouze namapovat externí platební metody na SourceId.'
        imageUrl:
          type: string
          description: Cesta k logu/obrázku
          nullable: true
        displayOrder:
          type: integer
          description: Pořadí výpisu tohoto stavového kódu
          format: int32
      additionalProperties: false
    OrderPrintPdfModel:
      type: object
      properties:
        orders:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    OrderSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          description: Doplňující parametry pro další vyhledávání
          nullable: true
        createdFrom:
          type: string
          description: Datum vytvoření zásilky od ve formátu YYYY-MM-DD
          nullable: true
        createdTo:
          type: string
          description: Datum vytvoření zásilky do ve formátu YYYY-MM-DD
          nullable: true
        carrierCodes:
          type: array
          items:
            type: string
          description: 'Kódy dopravců, pro které hledáme objednávky'
          nullable: true
        sortField:
          type: string
          description: Název sloupce pro řazení
          nullable: true
        sortOrder:
          type: string
          description: Pořadí zobrazení
          nullable: true
        applicationIds:
          type: array
          items:
            type: integer
            format: int32
          description: 'ID aplikací, pro které chceme hledat objednávky'
          nullable: true
        status:
          $ref: '#/components/schemas/OrderSearchStatusModel'
      additionalProperties: false
    OrderSearchStatusModel:
      type: object
      properties:
        id:
          type: integer
          format: int32
        applicationId:
          type: integer
          format: int32
      additionalProperties: false
    OrderStatusChangeModel:
      type: object
      properties:
        orders:
          type: array
          items:
            type: integer
            format: int32
          description: 'Seznam ID objednávek, pro které chceme stav změnit'
          nullable: true
        newStatusId:
          type: integer
          description: ID nového stavu objednávky
          format: int32
        generateDocuments:
          type: boolean
          description: 'Pokud je vyplněno, tak určuje, zda budou při změně stavu vygenerovány příslušné dokumenty pro danou e-shop platformu. Ne všechny e-shop aplikace/platformy podporují tuto funkci'
          nullable: true
        generateSms:
          type: boolean
          description: 'Pokud je vyplněno, tak určuje, zda budou při změně stavu objednávky vygenerovány SMS zprávy. Nastavení dle zvolené e-shop aplikace/platformy podporující tuto funkci'
          nullable: true
        generateEmail:
          type: boolean
          description: 'Pokud je vyplněno, tak určuje, zda budou při změně stavu objednávky vygenerovány emailové zprávy. Nastavení dle zvolené e-shop aplikace/platformy podporující tuto funkci'
          nullable: true
      additionalProperties: false
    OrderStatusCreateModel:
      type: object
      properties:
        sourceId:
          type: array
          items:
            type: string
          description: Kód stavového kódu ze zdrojového systému. Může být číslo i text. Následně je hodnota upravena dle cílového systému.
          nullable: true
        name:
          type: string
          description: Název stavu objednávky
          nullable: true
        textColor:
          type: string
          description: Barva textu zvoleného stavu objednávky
          nullable: true
        backgroundColor:
          type: string
          description: Barva pozadí zvoleného stavu objednávky.
          nullable: true
        displayOrder:
          type: integer
          description: Pořadí výpisu tohoto stavového kódu
          format: int32
      additionalProperties: false
    OrderStatusModel:
      type: object
      properties:
        id:
          type: integer
          description: ID stavu objednávky
          format: int32
        applicationId:
          type: integer
          description: 'ID aplikace, ke kterému stav patří'
          format: int32
        sourceId:
          type: array
          items:
            type: string
          description: Kód stavového kódu ze zdrojového systému. Může být číslo i text. Následně je hodnota upravena dle cílového systému.
          nullable: true
        name:
          type: string
          description: Název stavu objednávky
          nullable: true
        textColor:
          type: string
          description: Barva textu zvoleného stavu objednávky
          nullable: true
        backgroundColor:
          type: string
          description: Barva pozadí zvoleného stavu objednávky.
          nullable: true
        isSystem:
          type: boolean
          description: 'Informace, zda se jedná o systémový stav. Systémové stavy nelze smazat, lze pouze namapovat externí stavové kódy.'
        displayOrder:
          type: integer
          description: Pořadí výpisu tohoto stavového kódu
          format: int32
      additionalProperties: false
    OrderStatusUpdateModel:
      type: object
      properties:
        sourceId:
          type: array
          items:
            type: string
          description: Kód stavového kódu ze zdrojového systému. Může být číslo i text. Následně je hodnota upravena dle cílového systému.
          nullable: true
        name:
          type: string
          description: Název stavu objednávky
          nullable: true
        textColor:
          type: string
          description: Barva textu zvoleného stavu objednávky
          nullable: true
        backgroundColor:
          type: string
          description: Barva pozadí zvoleného stavu objednávky.
          nullable: true
        isSystem:
          type: boolean
          description: 'Informace, zda se jedná o systémový stav. Systémové stavy nelze smazat, lze pouze namapovat externí stavové kódy.'
        displayOrder:
          type: integer
          description: Pořadí výpisu tohoto stavového kódu
          format: int32
      additionalProperties: false
    OrderUpdateModel:
      type: object
      properties:
        orders:
          type: array
          items:
            type: integer
            format: int32
          description: 'Seznam ID objednávek, pro které chceme stav změnit'
          nullable: true
        resolved:
          type: boolean
          description: Umožňuje označit danou objednávku jako vyřešenou/nevyřešenou
          nullable: true
        isPaid:
          type: boolean
          description: Je objednávka uhrazená?
          nullable: true
        paidDate:
          type: string
          description: 'Datum úhrady objednávky. Pokud není vyplněno a objednávka je nastavena jako uhrazená, použije se aktuální datum.'
          format: date-time
          nullable: true
        statusId:
          type: integer
          description: ID stavu objednávky
          format: int32
          nullable: true
        paymentMethodId:
          type: integer
          description: ID platební metody objednávky
          format: int32
          nullable: true
        customerNote:
          type: string
          description: Zákaznická poznámka k objednávce
          nullable: true
        internalNote:
          type: string
          description: Interní poznámka k objednávce
          nullable: true
        piecesCount:
          type: integer
          description: Počet zásilek u daného dopravce
          format: int32
          nullable: true
        totalWeight:
          type: number
          description: Celková váha objednávky / zásilek
          format: double
          nullable: true
      additionalProperties: false
    PackageActivitySearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          description: Doplňující parametry pro další vyhledávání
          nullable: true
      additionalProperties: false
    PackageCancelModel:
      type: object
      properties:
        packages:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    PackageListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PackageModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
    PackageModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        canCancel:
          type: boolean
          readOnly: true
        canceled:
          type: boolean
          description: Byla zásilka zrušena?
        carrierCode:
          type: string
          description: Kód dopravce
          nullable: true
        carrierName:
          type: string
          description: Název dopravce
          nullable: true
        codCurrency:
          type: string
          description: Měna dobírky
          nullable: true
        codPrice:
          type: number
          description: Hodnota dobírky
          format: double
          nullable: true
        created:
          type: string
          description: Datum vytvoření
          format: date-time
        delivered:
          type: boolean
          description: Je daná zásilka doručená
        editable:
          type: boolean
          description: 'Určuje, zda lze tuto zásilku editovat'
        maskAddress:
          $ref: '#/components/schemas/AddressModel'
        maskAddressId:
          type: integer
          format: int32
          nullable: true
        orderId:
          type: integer
          description: 'ID objednávky, ke které daná zásilka patří'
          format: int32
          nullable: true
        packageNumberCarrier:
          type: string
          description: "Číslo zásilky dopravce\r\nGEIS = 7726000080212"
          nullable: true
        packageNumberCustom:
          type: string
          description: Vlastní pojmenování zásilky (číslo objednávky apod)
          nullable: true
        packageNumberOrder:
          type: integer
          description: Pořadové číslo balíku (u vícebalíkových zásilek)
          format: int32
        packageStatusId:
          type: integer
          description: ID stavu zásilky dle dopravce
          format: int32
        pickup:
          type: integer
          description: Informace o svozu
          format: int32
          nullable: true
        price:
          type: number
          description: Udávaná hodnota zásilky
          format: double
        printable:
          type: boolean
          description: 'Určuje, zda lze tisknout štítek pro zásilku'
        printed:
          type: boolean
          description: Byl již štítek pro tuto zásilku vytisknut?
        recAddress:
          $ref: '#/components/schemas/AddressModel'
        recAddressId:
          type: integer
          format: int32
        reference:
          type: string
          description: Reference zásilky
          nullable: true
        senderAddress:
          $ref: '#/components/schemas/AddressModel'
        senderAddressId:
          type: integer
          format: int32
          nullable: true
        sent:
          type: boolean
          description: Je daná zásilka odeslaná
        serviceCode:
          type: string
          description: Kód služby dopravce
          nullable: true
        serviceName:
          type: string
          description: Název služby dopravce
          nullable: true
        status:
          $ref: '#/components/schemas/PackageTrackingStatusEventResponseModel'
        submittedCarrier:
          type: boolean
        updated:
          type: string
          description: Datum poslední úpravy
          format: date-time
        vs:
          type: string
          description: Variabilní symbol dobírky
          nullable: true
      additionalProperties: { }
    PackagePdfPrintModel:
      type: object
      properties:
        skip:
          type: integer
          format: int32
          nullable: true
        onePerPage:
          type: boolean
          nullable: true
        type:
          type: string
          nullable: true
        packages:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
      description: Vytiskne pro zvolené ID zásilek štítky se zvolenou konfigurací
    PackageSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          description: Doplňující parametry pro další vyhledávání
          nullable: true
        orderId:
          type: integer
          description: 'ID objednávky, ke které chceme najít zásilky'
          format: int32
          nullable: true
        filters:
          type: array
          items:
            $ref: '#/components/schemas/SearchFilter'
          nullable: true
        createdFrom:
          type: string
          description: Datum vytvoření zásilky od ve formátu YYYY-MM-DD
          nullable: true
        createdTo:
          type: string
          description: Datum vytvoření zásilky do ve formátu YYYY-MM-DD
          nullable: true
        sortField:
          type: string
          description: Název sloupce pro řazení
          nullable: true
        sortOrder:
          type: string
          description: Pořadí zobrazení
          nullable: true
      additionalProperties: false
    PackageTotalPeriod:
      enum:
        - ThisMonth
        - LastMonth
        - ThisYear
      type: string
    PackageTotalSearchModel:
      type: object
      properties:
        period:
          $ref: '#/components/schemas/PackageTotalPeriod'
      additionalProperties: false
    PackageTrackingStatusEventResponseModel:
      type: object
      properties:
        date:
          type: string
          format: date-time
        category:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        nameSystem:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        item:
          type: string
          nullable: true
        delivered:
          type: boolean
        canceled:
          type: boolean
      additionalProperties: false
    PackageTrackingStatusRequestModel:
      type: object
      properties:
        packages:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    PickupListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PickupModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
    PickupModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        hash:
          type: string
          description: Unikátní hash pro vyhledání tisku
          nullable: true
        carrierCode:
          type: string
          description: Kód dopravce
          nullable: true
        printed:
          type: boolean
        created:
          type: string
          format: date-time
        printDateUtc:
          type: string
          description: Datum vyzvednutí
          format: date-time
          nullable: true
        packagesCount:
          type: integer
          description: Počet zásilek v předávacím protokolu
          format: int32
        protocolUrl:
          type: string
          nullable: true
        labelsUrl:
          type: string
          nullable: true
      additionalProperties: false
    PickupOrderModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        date:
          type: string
          nullable: true
        packages:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    PickupSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          description: Doplňující parametry pro další vyhledávání
          nullable: true
        filters:
          type: array
          items:
            $ref: '#/components/schemas/SearchFilter'
          nullable: true
        sortField:
          type: string
          description: Název sloupce pro řazení
          nullable: true
        sortOrder:
          type: string
          description: Pořadí zobrazení
          nullable: true
      additionalProperties: false
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: { }
    RuleCondition:
      type: object
      properties:
        field:
          type: string
          nullable: true
        operator:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    RuleCreateModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        type:
          $ref: '#/components/schemas/RuleType'
        name:
          type: string
          description: Název pravidla
          nullable: true
        description:
          type: string
          description: Popis pravidla
          nullable: true
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleCondition'
          description: Podmínky pro tvorbu pravidel
          nullable: true
      additionalProperties: false
    RuleListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/RuleModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
    RuleModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        type:
          $ref: '#/components/schemas/RuleType'
        name:
          type: string
          description: Název pravidla
          nullable: true
        description:
          type: string
          description: Popis pravidla
          nullable: true
        status:
          $ref: '#/components/schemas/RuleStatus'
        created:
          type: string
          description: Datum vytvoření pravidla
          format: date-time
        lastSuccessful:
          type: string
          description: Datum poslední kontroly/stažení dat apod.
          format: date-time
          nullable: true
        validFrom:
          type: string
          description: Datum platnosti pravidla od
          format: date-time
          nullable: true
        validTo:
          type: string
          description: Datum platnosti pravidla do
          format: date-time
          nullable: true
        usageOneTimeOnly:
          type: boolean
          description: Jedná se pouze o jednorázové spuštění pravidla?
          nullable: true
        sendOrderEmail:
          type: boolean
          description: 'Pokud je nastaveno na true, odešlou se systémové emaily (na e-shopu)'
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleCondition'
          description: Podmínky pro tvorbu pravidel
          nullable: true
      additionalProperties: false
    RuleSearchModel:
      type: object
      properties:
        page:
          type: integer
          description: Gets a page number
          format: int32
          readOnly: true
        pageSize:
          type: integer
          description: Gets a page size
          format: int32
        draw:
          type: integer
          description: Gets or sets draw. Draw counter. This is used by DataTables to ensure that the Ajax returns from server-side processing requests are drawn in sequence by DataTables (Ajax requests are asynchronous and thus can return out of sequence).
          format: int32
          nullable: true
        start:
          type: integer
          description: Gets or sets skiping number of rows count. Paging first record indicator.
          format: int32
        length:
          type: integer
          description: Gets or sets paging length. Number of records that the table can display in the current draw.
          format: int32
          default: 50
        search:
          type: string
          nullable: true
        ruleType:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    RuleStatus:
      enum:
        - Inactive
        - Active
        - WaitingActivation
        - Deleted
      type: string
    RuleType:
      enum:
        - Order
        - Package
      type: string
    RuleUpdateModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        type:
          $ref: '#/components/schemas/RuleType'
        name:
          type: string
          description: Název pravidla
          nullable: true
        description:
          type: string
          description: Popis pravidla
          nullable: true
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleCondition'
          description: Podmínky pro tvorbu pravidel
          nullable: true
      additionalProperties: false
    SearchFilter:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
        matchMode:
          type: string
          nullable: true
        matchModeValid:
          type: boolean
          readOnly: true
      additionalProperties: false
    SearchKeywordModel:
      type: object
      properties:
        keyword:
          type: string
          nullable: true
        searchPackages:
          type: boolean
          nullable: true
        searchAddresses:
          type: boolean
          nullable: true
        searchOrders:
          type: boolean
          nullable: true
      additionalProperties: false
    SearchResultListModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/SearchResultModel'
          description: Gets or sets data records
          nullable: true
        total:
          type: integer
          description: Gets or sets draw
          format: int32
      additionalProperties: false
    SearchResultModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        name:
          type: string
          description: Jméno záznamu
          nullable: true
        carrierCode:
          type: string
          description: 'Kód dopravce, pokud je možný'
          nullable: true
        type:
          $ref: '#/components/schemas/SearchResultTypeEnum'
      additionalProperties: false
    SearchResultTypeEnum:
      enum:
        - Package
        - Address
        - Order
      type: string
    TestMessageTemplateModel:
      type: object
      properties:
        id:
          type: integer
          description: Gets or sets model identifier
          format: int32
        languageId:
          type: integer
          format: int32
        tokens:
          type: array
          items:
            type: string
          nullable: true
        sendTo:
          type: string
          nullable: true
      additionalProperties: false
    WebhookCreateErrorModel:
      type: object
      properties:
        url:
          type: string
          description: 'Zadaná URL, která obsahuje chybu'
          nullable: true
        error:
          type: string
          description: Popis chyby nebo chybové hlášení
          nullable: true
      additionalProperties: false
    WebhookCreateItemModel:
      type: object
      properties:
        event:
          type: string
          description: Název události
          nullable: true
        url:
          type: string
          description: URL adresa
          nullable: true
      additionalProperties: false
    WebhookCreateModel:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookCreateItemModel'
          description: Seznam webhooks k vytvoření
          nullable: true
      additionalProperties: false
    WebhookCreateResponseModel:
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/WebhookDetailModel'
          description: 'Seznam výstupních objektů (webhooks), které byly vytvořeny'
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/WebhookCreateErrorModel'
          description: 'Seznam adres a chyb, které nebyly zpracovány'
          nullable: true
      additionalProperties: false
    WebhookCreateResponseModelApiGenericResult:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
          description: Seznam chybových hlášení
          nullable: true
        result:
          $ref: '#/components/schemas/WebhookCreateResponseModel'
      additionalProperties: false
    WebhookDetailModel:
      type: object
      properties:
        id:
          type: integer
          description: ID záznamu
          format: int32
        event:
          type: string
          description: Název události
          nullable: true
        url:
          type: string
          description: URL adresa
          nullable: true
        created:
          type: string
          format: date-time
        updated:
          type: string
          description: Datum poslední aktualizace
          format: date-time
          nullable: true
        status:
          $ref: '#/components/schemas/WebhookStatus'
      additionalProperties: false
    WebhookStatus:
      enum:
        - Disabled
        - Active
      type: string
    WebhookUpdateModel:
      type: object
      properties:
        id:
          type: integer
          description: ID záznamu
          format: int32
        url:
          type: string
          description: URL adresa
          nullable: true
      additionalProperties: false